generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                   String                 @id @default(uuid())
  name                 String                 @unique
  Transaction          Transaction[]
  Storages             Storage[]
  RecurringTransaction RecurringTransaction[]
  Sinks                Sink[]
  passwordHash         String
}

model Sink {
  id                   String                 @id @default(uuid())
  name                 String
  Transactions         Transaction[]
  RecurringTransaction RecurringTransaction[]
  defaultCategory      String                 @default("Uncategorized")
  User                 User                   @relation(fields: [userId], references: [id])
  userId               String
}

model Transaction {
  id          String   @id @default(uuid())
  description String?
  amount      Int
  Sink        Sink?    @relation(fields: [sinkId], references: [id])
  sinkId      String?
  User        User     @relation(fields: [userId], references: [id])
  userId      String
  Storage     Storage? @relation(fields: [storageId], references: [id])
  storageId   String?
  createdAt   DateTime @default(now())
  category    String   @default("Uncategorized")
}

model Storage {
  id                   String                 @id @default(uuid())
  name                 String
  Transactions         Transaction[]
  User                 User                   @relation(fields: [userId], references: [id])
  userId               String
  interestRate         Float                  @default(0)
  RecurringTransaction RecurringTransaction[]
  startAmount          Int                    @default(0)
}

enum RecurringTransactionFrequency {
  DAILY
  WEEKLY
  MONTHLY
  YEARLY
}

model RecurringTransaction {
  id          String                        @id @default(uuid())
  amount      Int
  name        String
  description String?
  Sink        Sink?                         @relation(fields: [sinkId], references: [id])
  sinkId      String?
  User        User                          @relation(fields: [userId], references: [id])
  userId      String
  Storage     Storage?                      @relation(fields: [storageId], references: [id])
  storageId   String?
  frequency   RecurringTransactionFrequency
  category    String                        @default("Uncategorized")
  startDate   DateTime                      @default(now())
}
